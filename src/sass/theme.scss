@use "@angular/material" as mat;
@include mat.core();

// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy($custom-typography);`

//Available color palettes: https://material.io/design/color/
$servihelper-primary: mat.define-palette(mat.$deep-purple-palette);
$servihelper-accent: mat.define-palette(mat.$yellow-palette);
// The warn palette is optional (defaults to red).
/* $servihelper-warn: mat.define-palette(mat.$red-palette); */

$custom-typography: mat.define-typography-config(
  $font-family: "Noto Sans, sans-serif",
);

// Create the theme object (a Sass map containing all of the palettes).
$servihelper-theme: mat.define-light-theme(
  (
    color: (
      primary: $servihelper-primary,
      accent: $servihelper-accent,
    ),
    typography: $custom-typography,
    density: 0,
  )
);

// Include theme styles for core and each material component.
@include mat.all-component-themes($servihelper-theme);

// Define an alternate dark theme.

/* $dark-primary: mat.define-palette(mat.$grey-palette, 50, 900);
$dark-accent: mat.define-palette(mat.$amber-palette, 50, 100, 200);
$dark-warn: mat.define-palette(mat.$red-palette);
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $dark-primary,
      accent: $dark-accent,
      warn: $dark-warn,
    ),
  )
);

.servihelper-contrast-theme {
  @include mat.all-legacy-component-colors($dark-theme);
} */
